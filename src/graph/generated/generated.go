// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package generated

import (
	"api/domain/entities"
	"api/graph/model"
	"context"
)

type Config struct {
	Resolvers  ResolverRoot
	Directives DirectiveRoot
	Complexity ComplexityRoot
}

type ResolverRoot interface {
	Mutation() MutationResolver
	Query() QueryResolver
	SignedUploadURL() SignedUploadURLResolver
}

type DirectiveRoot struct{}

type ComplexityRoot struct{}

type MutationResolver interface {
	CreateTower(ctx context.Context, input model.CreateTowerInput) (*entities.Tower, error)
	UpdateTower(ctx context.Context, input model.UpdateTowerInput) (*entities.Tower, error)
	DeleteTower(ctx context.Context, id string) (bool, error)
	CreateFloor(ctx context.Context, input model.CreateFloorInput) (*entities.Floor, error)
	UpdateFloor(ctx context.Context, input model.UpdateFloorInput) (*entities.Floor, error)
	DeleteFloor(ctx context.Context, id string) (bool, error)
	CreateApartment(ctx context.Context, input model.CreateApartmentInput) (*entities.Apartment, error)
	UpdateApartment(ctx context.Context, input model.UpdateApartmentInput) (*entities.Apartment, error)
	DeleteApartment(ctx context.Context, id string) (bool, error)
	AddApartmentImage(ctx context.Context, apartmentID string, imageURL string, description *string) (*entities.ApartmentImage, error)
	RemoveApartmentImage(ctx context.Context, imageID string) (bool, error)
	ReorderApartmentImages(ctx context.Context, apartmentID string, imageIds []string) (bool, error)
	CreateGalleryImage(ctx context.Context, imageURL string, route string, description *string) (*entities.GalleryImage, error)
	UpdateGalleryImage(ctx context.Context, id string, description *string) (*entities.GalleryImage, error)
	DeleteGalleryImage(ctx context.Context, id string) (bool, error)
	ReorderGalleryImages(ctx context.Context, route string, imageIds []string) (bool, error)
	CreateImagePin(ctx context.Context, galleryImageID string, x float64, y float64, apartmentID string, description *string) (*entities.ImagePin, error)
	UpdateImagePin(ctx context.Context, id string, x *float64, y *float64, description *string) (*entities.ImagePin, error)
	DeleteImagePin(ctx context.Context, id string) (bool, error)
	UpdateAppConfig(ctx context.Context, siteName *string, contactEmail *string, maintenanceMode *bool) (*entities.AppConfig, error)
}

type QueryResolver interface {
	Towers(ctx context.Context) ([]*entities.Tower, error)
	Tower(ctx context.Context, id string) (*entities.Tower, error)
	Floors(ctx context.Context, towerID *string) ([]*entities.Floor, error)
	Floor(ctx context.Context, id string) (*entities.Floor, error)
	Apartments(ctx context.Context, floorID *string) ([]*entities.Apartment, error)
	Apartment(ctx context.Context, id string) (*entities.Apartment, error)
	SearchApartments(ctx context.Context, input model.ApartmentSearchInput) ([]*entities.Apartment, error)
	GalleryImages(ctx context.Context, route *string) ([]*entities.GalleryImage, error)
	GalleryImage(ctx context.Context, id string) (*entities.GalleryImage, error)
	GalleryRoutes(ctx context.Context) ([]string, error)
	ImagePins(ctx context.Context, galleryImageID string) ([]*entities.ImagePin, error)
	ImagePin(ctx context.Context, id string) (*entities.ImagePin, error)
	AppConfig(ctx context.Context) (*entities.AppConfig, error)
	GenerateSignedUploadURL(ctx context.Context, fileName string, contentType string, folder string) (*entities.SignedUploadURL, error)
	GenerateBulkDownload(ctx context.Context, towerID *string) (*entities.BulkDownload, error)
}

type SignedUploadURLResolver interface {
	Fields(ctx context.Context, obj *entities.SignedUploadURL) (interface{}, error)
}